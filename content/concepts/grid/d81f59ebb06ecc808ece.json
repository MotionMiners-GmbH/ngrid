{"id":"concepts/grid/the-registry","title":"The Registry","contents":"<h1 id=\"the-registry\"><a href=\"#the-registry\" aria-hidden><span class=\"icon icon-link\"></span></a>The Registry</h1>\n<p>The registry is a store for templates.</p>\n<h2 id=\"why\"><a href=\"#why\" aria-hidden><span class=\"icon icon-link\"></span></a>Why</h2>\n<p>Templates are reusable, a single template can be used across the app, defined once and stored for reuse.</p>\n<p>The most obvious example is the cell template:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pbl-ngrid</span><span class=\"token punctuation\">></span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">*pblNgridCellDef</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>*<span class=\"token punctuation\">'</span>; value as value<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ value }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pbl-ngrid</span><span class=\"token punctuation\">></span></span></code></pre></div></div>\n<p>In the example above we define a template that will be used by the grid to render the content of a cell.</p>\n<p>Now let's get more specific:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pbl-ngrid</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">*pblNgridCellTypeDef</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>number<span class=\"token punctuation\">'</span>; value as value<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ value | number:'1.0-2' }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">*pblNgridCellDef</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>*<span class=\"token punctuation\">'</span>; value as value<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ value }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pbl-ngrid</span><span class=\"token punctuation\">></span></span></code></pre></div></div>\n<p>Now we also have a template for rendering cells which belong to a column that is of type <code class=\"language-text\">number</code>.</p>\n<p>Now, if we want to create another grid in the same page or in another page we will have to re-define the template again.\nThis is a redundant, mundane and error prone, we can define it once and reuse it in all of the grid's.</p>\n<p>This is why we need a registry, to save all the templates so they can be used across the application.</p>\n<h2 id=\"registry-hierarchy\"><a href=\"#registry-hierarchy\" aria-hidden><span class=\"icon icon-link\"></span></a>Registry Hierarchy</h2>\n<p>The registry is made up of multiple sub-registry built in hierarchy similar to how dependency injection works in angular.</p>\n<p>There are 2 things to remember:</p>\n<ul>\n<li>An application will have a single, root registry</li>\n<li>Each instance will have a unique registry instance</li>\n</ul>\n<p>This means that each grid has an access to a unique registry that is connected to a parent registry.\nThe parent might be the root but might also be another registry which points to a parent, going up to the root.</p>\n<p>When the grid wants to render a cell it will search for the template attached to the column of the cell.</p>\n<p>For example, if the column is of type <code class=\"language-text\">number</code> it will search in the registry for a <strong>type cell template</strong> for the type `number.\nThe first lookup will be in the registry of the grid, if not found it will search the parent going up to the root.</p>\n<p>This structure is very flexible:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">*pblNgridCellTypeDef</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>number<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>ABC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pbl-ngrid</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">*pblNgridCellTypeDef</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>number<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>123<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pbl-ngrid</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pbl-ngrid</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pbl-ngrid</span><span class=\"token punctuation\">></span></span></code></pre></div></div>\n<p>The example above is the template of a component, which render 2 grid's.<br>\nThere are 2 type cell templates, an orphan one, outside of any grid (rendering <code class=\"language-text\">ABC</code>) and one inside a grid (rendering <code class=\"language-text\">123</code>).</p>\n<p>The first grid:</p>\n<ul>\n<li>Search's for the type cell template for <code class=\"language-text\">number</code></li>\n<li>Find's a match that will render <code class=\"language-text\">123</code></li>\n</ul>\n<p>The second grid:</p>\n<ul>\n<li>Search's for the type cell template for <code class=\"language-text\">number</code></li>\n<li>No match found in the unique registry, will now search in the parent</li>\n<li>Find's a match that will render <code class=\"language-text\">ABC</code></li>\n</ul>\n<p>In the first grid we are overwriting the definition, only for this grid.</p>\n<h3 id=\"template-lifetime\"><a href=\"#template-lifetime\" aria-hidden><span class=\"icon icon-link\"></span></a>Template lifetime</h3>\n<p>Each template registered in the registry is bound to the host it is defined in.</p>\n<p>For templates defined in the content of the grid:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pbl-ngrid</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">*pblNgridCellTypeDef</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>number<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>123<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pbl-ngrid</span><span class=\"token punctuation\">></span></span></code></pre></div></div>\n<p>Simple, once the grid is gone it's registry is gone and so all templates are gone.</p>\n<p>In the previous example, we had a template defined in the component:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">*pblNgridCellTypeDef</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>number<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>ABC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pbl-ngrid</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pbl-ngrid</span><span class=\"token punctuation\">></span></span></code></pre></div></div>\n<p>Now, the registry is not unique, it might be the root or some other registry we defined in between.<br>\nHowever, when the component is destroyed the template is also destroyed and removed from the registry.</p>\n<h3 id=\"real-global-templates\"><a href=\"#real-global-templates\" aria-hidden><span class=\"icon icon-link\"></span></a>Real global templates</h3>\n<p>To really leverage the power of the registry it is best to define all template close to the root component of your application.</p>\n<p>This can be done by defining the templates on the root component itself or by defining them on a component used in the root template.</p>\n<h2 id=\"registered-types\"><a href=\"#registered-types\" aria-hidden><span class=\"icon icon-link\"></span></a>Registered types</h2>\n<p>At this point it's obvious that cell templates are used in the registry, but other types are also used.</p>\n<p>There are 2 ways to store entries:</p>\n<ul>\n<li>Single</li>\n<li>Multi</li>\n</ul>\n<p>Each registry must be of a certain <code class=\"language-text\">kind</code> which is used to identify it.</p>\n<p>A single registry will only allow one entry for the kind at any time, replacing the previous one when a new one is set.<br>\nA Multi registry will allow any number of entries, which are grouped by their <code class=\"language-text\">kind</code>.</p>\n<p>For example, in the cell template domain we have 4 kinds:</p>\n<ul>\n<li><strong>headerCell</strong> - Cell templates for the column header cell</li>\n<li><strong>tableCell</strong> - Cell templates for the column cell</li>\n<li><strong>editorCell</strong> - Cell templates for the column cell in edit mode</li>\n<li><strong>footerCell</strong> - Cell templates for the column footer cell</li>\n</ul>\n<p>Of course, all of the kinds are <strong>multi</strong>.</p>\n<h2 id=\"not-only-templateref\"><a href=\"#not-only-templateref\" aria-hidden><span class=\"icon icon-link\"></span></a>Not only <code class=\"language-text\">TemplateRef</code></h2>\n<p>Intuitively, you might think that the registry only hold entities that are pure templates (<code class=\"language-text\">TemplateRef</code>). This is not the case.</p>\n<p>The entry type depends on the implementation of the <code class=\"language-text\">kind</code>, the registry have no knowledge of the entries it store, it only expects them to have a <code class=\"language-text\">kind</code>.\nIt only serves as a get/set store for registry entries.</p>\n<p>The implementation for cell templates will only use <code class=\"language-text\">TemplateRef</code> entries but other implementations use <code class=\"language-text\">TemplateRef</code> and component based entries.</p>\n"}