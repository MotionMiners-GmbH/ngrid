{"id":"features/column/column-sort","title":"Column Sort","contents":"<h1 id=\"column-sorting\"><a href=\"#column-sorting\" aria-hidden><span class=\"icon icon-link\"></span></a>Column Sorting</h1>\n<p>Column sorting is activated and configured in 2 locations:</p>\n<ol>\n<li>DataSource (API)</li>\n<li>Grid instance (API)</li>\n</ol>\n<p>In addition, you can configure a column specific sorting behaviour in the column definitions.</p>\n<h2 id=\"column-definitions\"><a href=\"#column-definitions\" aria-hidden><span class=\"icon icon-link\"></span></a>Column definitions</h2>\n<p>In the <strong>Column</strong> definitions we define if the column is sortable and optionally how to sort it.</p>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">PblColumnDefinition</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">PblBaseColumnDefinition</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n  sort<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> PblNgridSorter<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div>\n<p>Setting <code class=\"language-text\">sort: true</code> will mark the column as sortable and the sort logic is to be sent when setting the current sort.</p>\n<p>Or, we can provide a sorting logic for the column via <code class=\"language-text\">PblNgridSorter</code>:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> PblNgridSortOrder <span class=\"token operator\">=</span> <span class=\"token string\">'asc'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'desc'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">PblNgridSortInstructions</span> <span class=\"token punctuation\">{</span>\n  order<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> PblNgridSortOrder<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">PblNgridSorter</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">(</span>column<span class=\"token punctuation\">:</span> PblColumn<span class=\"token punctuation\">,</span> sort<span class=\"token punctuation\">:</span> PblNgridSortInstructions<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div>\n<blockquote class=\"warn icon\">\n<div class=\"icon-location\"></div>\n Note that defining \n<code class=\"language-text\">sort</code>\n for a column does not activate it, to activate a sorting for a column you need to use the API.\n</blockquote>\n<h2 id=\"datasource-api\"><a href=\"#datasource-api\" aria-hidden><span class=\"icon icon-link\"></span></a>DataSource (API)</h2>\n<p>Through the datasource (<code class=\"language-text\">PblDataSource</code>) we define the sorting programmatically.</p>\n<p>We can define the current sorted column, the direction of the sort (<code class=\"language-text\">asc</code> or <code class=\"language-text\">desc</code>) and an optional custom sort logic.</p>\n<p>If we don't supply any of those, it will just clear the active sort.</p>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">  <span class=\"token comment\">/**\n   * Clear the current sort definitions.\n   * @param skipUpdate When true will not update the datasource, use this when the data comes sorted and you want to sync the definitions with the current data set.\n   * default to false.\n   */</span>\n  <span class=\"token function\">setSort</span><span class=\"token punctuation\">(</span>skipUpdate<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * Set the sorting definition for the current data set.\n   * @param column\n   * @param sort\n   * @param skipUpdate When true will not update the datasource, use this when the data comes sorted and you want to sync the definitions with the current data set.\n   * default to false.\n   */</span>\n  <span class=\"token function\">setSort</span><span class=\"token punctuation\">(</span>column<span class=\"token punctuation\">:</span> PblColumn<span class=\"token punctuation\">,</span> sort<span class=\"token punctuation\">:</span> PblNgridSortDefinition<span class=\"token punctuation\">,</span> skipUpdate<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span></code></pre></div></div>\n<h3 id=\"grid-instance-api\"><a href=\"#grid-instance-api\" aria-hidden><span class=\"icon icon-link\"></span></a>Grid instance (API)</h3>\n<p>The grid instance API is just sugar around the datasource API, allowing you to reference columns by their <strong>id</strong> or <strong>alias</strong>.</p>\n<p>Internally, it will resolve the column instances and call the datasource API.</p>\n<blockquote class=\"info icon\">\n  <div class=\"icon-location\"></div>\n  This section deals with the programmatic approach to sorting. For UI reactive sorting (click on header to sort) see the <a [routerLink]=\"['../..', 'extensions', 'mat-sort']\">sorting section</a> in the material plugin.\n</blockquote>\n<div pbl-example-view=\"pbl-column-sort-example\"></div>\n<h2 id=\"aliasing\"><a href=\"#aliasing\" aria-hidden><span class=\"icon icon-link\"></span></a>Aliasing</h2>\n<p>Aliasing is just another way to reference a column indirectly (i.e. not through it's object reference).</p>\n<p>First, let's review the the basic indirect column reference, <code class=\"language-text\">id</code>:</p>\n<h3 id=\"the-id-reference\"><a href=\"#the-id-reference\" aria-hidden><span class=\"icon icon-link\"></span></a>The <code class=\"language-text\">id</code> reference</h3>\n<p>Each column has an <code class=\"language-text\">id</code> property that is used to uniquely identify the column.\nThe <code class=\"language-text\">id</code> property is <strong>optional</strong>, when not set the grid will automatically assign the value provided in <code class=\"language-text\">prop</code> (which should be unique).</p>\n<p>For example:</p>\n<ul>\n<li>If we set <strong>prop</strong> to <code class=\"language-text\">age</code> but don't set <strong>id</strong>, <strong>id</strong> will be <code class=\"language-text\">age</code>.</li>\n<li>If we set <strong>prop</strong> to <code class=\"language-text\">info.age</code> but don't set <strong>id</strong>, <strong>id</strong> will be <code class=\"language-text\">info.age</code>.</li>\n<li>If we set <strong>pro</strong> to <code class=\"language-text\">age</code> and <strong>id</strong> to <code class=\"language-text\">age_column</code>, <strong>id</strong> will be <code class=\"language-text\">age_column</code>.</li>\n</ul>\n<p>In most cases, setting the <strong>id</strong> specifically is not required, redundant and verbose with no gain.<br>\nHowever, in some cases, you might want to set <strong>id</strong> if the <strong>prop</strong> does not reflect a real property (virtual column).</p>\n<h3 id=\"the-alias-reference\"><a href=\"#the-alias-reference\" aria-hidden><span class=\"icon icon-link\"></span></a>The <code class=\"language-text\">alias</code> reference</h3>\n<p>Alias is a property in the column definition (<code class=\"language-text\">alias</code>) that creates an alias id to the column so you can use it as another reference.</p>\n<p>It is very similar to <strong>id</strong> but:</p>\n<ul>\n<li>It is not auto populated when not set</li>\n<li>It is not used by the <code class=\"language-text\">ColumnApi</code> when searching for a column</li>\n</ul>\n<p>The <strong>alias</strong> property is used to reference column in specific APIs like <code class=\"language-text\">PblNgridComponent.setSort</code> and <code class=\"language-text\">PblNgridComponent.setFilter</code>.</p>\n<p>In those APIs <strong>alias</strong> has priority, if set it will be used exclusively in the searching otherwise, when not set, <strong>id</strong> is used.</p>\n<p>Using <strong>id</strong> entirely, ignoring <strong>alias</strong>, is possible and will work. The <strong>alias</strong> property exist to create a clear separation between\nlogical units such as server and client when sorting and filtering operations are involved.</p>\n<p>For example, it is useful if you get list of sortable columns from the server which does not match the actual ids of the column like when using dot path notation in <strong>prop</strong> or\nwhen the server <code class=\"language-text\">sortBy</code> descriptors does not match the column names.</p>\n<p>Of course, you can also use <strong>id</strong> in this case, but <strong>alias</strong> is more descriptive and logically separated when trying to understand the structure.</p>\n"}